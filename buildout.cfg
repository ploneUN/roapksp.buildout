[buildout]

parts +=
    instance1
    atcontenttypes-instance1
    zopepy
    scripts
    ipzope
    wkhtmltopdf
    ejabberd.cfg
    omelette
    python-ldap
    releaser

show-picked-versions = true

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://packages.inigo-tech.com/packages/
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    plone.app.async
    plone.app.theming
    Pillow
    ilo.policy
    collective.z3cform.widgets
    zope.app.schema
    Products.PloneHotfix20161129 = 1.2
    Products.PloneHotfix20130618 # for plone < 4.3/4.2.5
    ${python-ldap:egg}

extends = 
    plone-4.2.4-versions.cfg
    versions.cfg
    site.cfg

versions = versions

download-cache = downloads
download-directory = ${buildout:download-cache}

newest = false

install-from-cache = false

extensions = mr.developer 
sources = sources
sources-dir = dev
auto-checkout = 
    ilo.mailreport
    ilo.portlets
    ilo.theme
    ilo.customizations
    ilo.workplan
    collective.stats
    collective.atautocomplete
    collective.portlet.collectionmultiview_extrarenderers
    collective.contacts
    Products.ILOIntranetTypes
    Products.ILOProjectEvaluation
    Products.DWCPReports
#    Solgema.fullcalendar
    Products.PloneBooking
    Products.CompoundField
    ilo.compatplone3
#    collective.portlet.collectionmultiview
    ilo.contentrules
    ilo.publications
    ilo.vocabularies
    ilo.policy
    ilo.missionreportstats
    iloactemp.backgroundnote
    collective.pdfexport
    iloksp.caching
    ploneun.consultant
    ploneun.sharingnotification
    ploneun.tor
    ploneun.subscribetochanges
    collective.z3cform.vocabularytokenwidget

[sources]
ilo.mailreport = git https://github.com/ploneUN/ilo.mailreport
ilo.portlets = git https://github.com/ploneUN/ilo.portlets
ilo.theme = git https://github.com/ploneUN/ilo.theme
ilo.customizations = git https://github.com/ploneUN/ilo.customizations
ilo.workplan = git https://github.com/ploneUN/ilo.workplan
collective.stats = git https://github.com/ploneUN/collective.stats
collective.atautocomplete = git https://github.com/ploneUN/collective.atautocomplete
collective.portlet.collectionmultiview_extrarenderers = git https://github.com/ploneUN/collective.portlet.collectionmultiview_extrarenderers
collective.contacts = git https://github.com/ploneUN/collective.contacts
Products.ILOIntranetTypes = git https://github.com/ploneUN/Products.ILOIntranetTypes
Products.ILOProjectEvaluation = git https://github.com/ploneUN/Products.ILOProjectEvaluation
Products.DWCPReports = git https://github.com/ploneUN/Products.DWCPReports
Products.PloneBooking = git https://github.com/ploneUN/Products.PloneBooking
Products.CompoundField = git https://github.com/ploneUN/Products.CompoundField
ilo.compatplone3 = git https://github.com/ploneUN/ilo.compatplone3
ilo.contentrules = git https://github.com/ploneUN/ilo.contentrules
ilo.publications = git https://github.com/ploneUN/ilo.publications.git
ilo.vocabularies = git https://github.com/ploneUN/ilo.vocabularies.git
ilo.policy = git https://github.com/ploneUN/ilo.policy
ilo.missionreportstats = git https://github.com/inigoconsulting/ilo.missionreportstats.git
collective.pdfexport = git https://github.com/collective/collective.pdfexport.git
iloksp.caching = git https://github.com/ploneUN/iloksp.caching.git
iloactemp.backgroundnote = git https://github.com/ploneUN/iloactemp.backgroundnote.git
ploneun.consultant = git https://github.com/ploneUN/ploneun.consultant.git
ploneun.sharingnotification = git https://github.com/ploneUN/ploneun.sharingnotification.git
ploneun.tor = git https://github.com/ploneUN/ploneun.tor.git
ploneun.subscribetochanges = git https://github.com/ploneUN/ploneun.subscribetochanges.git
collective.z3cform.vocabularytokenwidget = git https://github.com/inigoconsulting/collective.z3cform.vocabularytokenwidget.git

[solr-download]
url = http://ftp.tpnet.pl/vol/d1/apache//lucene/solr/3.5.0/apache-solr-3.5.0.tgz
md5sum = b7be2fc190b26377ced5ae6055ed43e2

[ipzope]
# a IPython Shell for interactive use with zope running.
# you also need to put
# https://svn.plone.org/svn/collective/dotipython/trunk/ipy_profile_zope.py
# to your $HOME/.ipython directory for the following to work.
recipe = zc.recipe.egg
eggs = 
    ipython 
    ${instance1:eggs}
initialization =
        import sys, os
        os.environ["INSTANCE_HOME"] = "${instance1:location}"
        sys.argv[1:1] = "--profile zope".split()
scripts = ipython=ipzope

[instance1]
recipe = plone.recipe.zope2instance
user = admin:password
http-address = 8080
#debug-mode = on
#verbose-security = on
zserver-threads = 4

environment-vars =
        WKHTMLTOPDF_PATH ${buildout:parts-directory}/wkhtmltopdf/wkhtmltopdf-amd64
        PYTHON_EGG_CACHE ${buildout:directory}/var/egg-cache
        HOME /home/plone
        zope_i18n_compile_mo_files true
        WKHTMLTOPDF_HTTPAUTH ${secrets:wkhtmltopdf-httpauth}


# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} ${plone:eggs} my.package
eggs =
    ipdb
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    Products.CMFCore
    Products.contentmigration
    eea.facetednavigation-meta
    eea.facetednavigation-overrides
    eea.facetednavigation
    ilo.policy
    collective.xmpp.core-reactor


zcml-additional-local = 

zcml-additional = ${:zcml-additional-local}

[instancedbg]
<= instance1
http-address = 8089
debug-mode = on
verbose-security = on

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[scripts]
recipe = zc.recipe.egg
eggs = qi.LiveChat


[wkhtmltopdf]
recipe = hexagonit.recipe.download
hash-name = false
url = https://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.11.0_rc1-static-amd64.tar.bz2

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}


#Sets file size limits for file uploads

[atcontenttypes-instance1]
recipe                 = plone.recipe.atcontenttypes 
zope-instance-location = ${instance1:location} 
max-file-size          =  ATFile:500mb


[ejabberd.cfg]
recipe = collective.recipe.template
input = templates/ejabberd.cfg.in
output = ${buildout:directory}/etc/ejabberd.cfg
xmppdomain = roap-ksp.ilo.org
pubsub_max_items_node = 1000
admin_userid = admin
collaboration_allowed_subnet = 0,0,0,0
collaboration_port = 5347
component_password = password


[python-ldap]
# This recipe allows custom python-ldap package to be built
# on a variety of platforms.
# Referenced from Six Feet Up
# http://www.sixfeetup.com/blog/installing-python-ldap-with-buildout-and-a-system-installed-openldap

recipe = zc.recipe.egg:custom
egg = python-ldap
include-dirs =
    /opt/local/include
    /opt/local/include/sasl
    /usr/local/include
    /usr/local/include/sasl
    /usr/include
    /usr/include/sasl
library-dirs =
    /opt/local/lib
    /opt/local/lib/sasl2
    /usr/local/lib
    /usr/local/lib/sasl2
    /usr/lib
    /usr/lib/sasl2
rpath = ${:library-dirs}

[releaser]
recipe = collective.recipe.template
input = templates/releaser.py.in
output = ${buildout:bin-directory}/releaser.py
mode = 755
auto-release = ${buildout:auto-checkout}
